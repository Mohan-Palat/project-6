  <div class="wrapper">
   <div class="cocktail">
     <div class="liquid"></div>
     <div class="ice-cubes">
       <div class="ice-cube ice-cube-1"></div>
       <div class="ice-cube ice-cube-2"></div>
       <div class="ice-cube ice-cube-3"></div>
     </div>
     <div class="lemon-slice"></div>
     <div class="leaves">
       <div class="leave leave-1"></div>
       <div class="leave leave-2"></div>
       <div class="leave leave-3"></div>
     </div>
     <div class="straw"></div>
     <div class="straw-surface"></div>
     <div class="shadow"></div>
    </div> 
  </div>
  <script>
    let links = [{label: 'Cocktails', bg: '#8e44ad', urlLink: 'cocktails'}, 
             {label: 'Create a Cocktail', bg: '#2980b9', urlLink: 'cocktails/new'}, 
             {label: 'Ingredients', bg: '#c0392b', urlLink: 'ingredients'}, 
             {label: 'Add Ingredients', bg: '#27ae60', urlLink: 'ingredients/new'}, 
            {label: 'Surprise!', bg: '#f39c12', urlLink: 'cocktails'}]; 
    let windowHeight = window.innerHeight;
    let radius = windowHeight*0.6,
    
    borderSize = radius*0.021;
    totalArea = 35, 
    increment = totalArea/(links.length-1),
    startPoint = 0-(totalArea/1.9),
    fontSize = radius*0.12,
    linkSize = radius*0.25;

    addLinks();
    styleLinks();

function addLinks() {
  for (let i=0, l=links.length; i<l; i++) {
    link = document.createElement('a'),
    hover = document.createElement('span');
    link.href = links[i].urlLink;
    link.dataset.color = links[i].bg;
    link.style.display = 'inline-block';
    link.style.textDecoration = 'none';
    link.style.color = '#fff';
    link.style.position = 'absolute';
    link.innerHTML = links[i].label;
    hover.style.position = 'absolute';
    hover.style.display = 'inline-block';
    hover.style.opacity = 0;
    document.body.appendChild(link);
    document.body.appendChild(hover);
    link.addEventListener('mouseover', linkOver);
    link.addEventListener('mouseout', linkOut);
    links[i].elem = link;
    links[i].hover = hover;
  }
}

function styleLinks() {
  for (let i=0, l=links.length; i<l; i++) 
  {
    let link = links[i].elem;
    hover = links[i].hover;
    deg = startPoint+(i*increment);  
    
    link.style.paddingLeft = radius*1.2+'px';
    link.style.fontSize = fontSize+'px';
    link.style.height = linkSize+'px';
    link.style.lineHeight = linkSize+'px';
    link.style.left = (borderSize+400)+'px';
    link.style.top = (windowHeight/2) - (windowHeight*0.1)+borderSize+'px';
    
    setTransformOrigin(link, '0px '+(linkSize*0.8)+'px');
    setTransition(link, 'all 0.2s ease-out');
    setTransform(link, 'rotate('+(deg + 1)+'deg)');
    console.log(link);
   
  }
}

window.onresize = function() {
  windowHeight = window.innerHeight;
  radius = windowHeight*0.6,
  borderSize = radius*0.021;  
  fontSize = radius*0.12,
  linkSize = radius*0.25;
  styleLinks();
}

function linkOver(e) {
  let thisLink = e.target, thisHover = thisLink.nextSibling;
  thisLink.style.paddingLeft = radius*1.25+'px';
  thisHover.style.opacity = 1;
  document.body.style.backgroundColor = thisLink.dataset.color;
}

function linkOut(e) {
  let thisLink = e.target, thisHover = thisLink.nextSibling;
  thisLink.style.paddingLeft = radius*1.2+'px';
  thisHover.style.opacity = 0;
}

function setTransform(element, string) {
  element.style.webkitTransform = string;
  element.style.MozTransform = string;
  element.style.msTransform = string;
  element.style.OTransform = string;
  element.style.transform = string;
}

function setTransformOrigin(element, string) {
  element.style.webkitTransformOrigin = string;
  element.style.MozTransformOrigin = string;
  element.style.msTransformOrigin = string;
  element.style.OTransformOrigin = string;
  element.style.transformOrigin = string;
}

function setTransition(element, string) {
  element.style.webkitTransition = string;
  element.style.MozTransition = string;
  element.style.msTransition = string;
  element.style.OTransition = string;
  element.style.transition = string;
}
</script>
  